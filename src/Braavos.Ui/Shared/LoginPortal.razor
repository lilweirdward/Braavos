@inject IUserService userService
@inject NavigationManager navManager

<div class="modal @((Visible ? "active" : ""))">
    <div class="modal-overlay" @onclick="@Toggle"></div>
    <div class="modal-container">
        <div class="modal-header">
            <button class="btn btn-clear float-right" @onclick="@Toggle"></button>
            <div class="modal-title h5">VEP Login Portal</div>
        </div>
        <div class="modal-body">
            <div class="container">
                <div class="columns">
                    <div class="column">
                        <div class="form-group">
                            <label class="form-label" for="nation-id">Nation ID</label>
                            <input class="form-input" type="text" id="nation-id" @bind="nationId" />
                        </div>
                    </div>
                    <div class="divider-vert" data-content="OR"></div>
                    <div class="column">
                        <div class="form-group">
                            <label class="form-label" for="ruler-name">Ruler Name</label>
                            <input class="form-input" type="text" id="ruler-name" @bind="rulerName" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label" for="unique-code">Unique Code</label>
                    <input class="form-input" type="text" id="unique-code" @bind="uniqueCode" />
                </div>
                <div class="form-group">
                    <label class="form-checkbox">
                        <input type="checkbox" @bind="rememberMe" />
                        <i class="form-icon"></i> Remember me
                    </label>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" @onclick="@LogIn">Log In</button>
            <button class="btn btn-link" @onclick="@Toggle">Close</button>
        </div>
    </div>
</div>

@code {

    private bool rememberMe;
    private int? nationId;
    private string rulerName;
    private string uniqueCode;

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    private Task Toggle()
    {
        Visible = !Visible;

        return VisibleChanged.InvokeAsync(Visible);
    }

    private async Task LogIn()
    {
        var request = nationId is null ? new AuthRequest(rulerName, uniqueCode) : new AuthRequest(nationId.Value, uniqueCode);
        Console.WriteLine(request);

        try
        {
            await userService.LogIn(request, rememberMe);
            navManager.NavigateTo("account");
        }
        catch (UnauthorizedAccessException)
        {
            Console.WriteLine("Unauthorized >:(");
            // Do stuff because they did a bad thing
        }
        catch (Exception e)
        {
            Console.WriteLine("Uh oh :( - " + e.Message);
            // Do stuff because someone did a bad thing (probably me)
        }
    }

}
