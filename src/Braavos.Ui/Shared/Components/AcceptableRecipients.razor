<div class="panel py-lg px-2 my-2">
    @if (Account.AvailableSlots == 0)
    {
        <div class="empty bg-white">
            <p class="empty-title h5">You are not expected to interact with VEP today</p>
            <p>
                Your nation does not have any free foreign aid slots, so you are not expected to receive any transactions today. Please
                check again tomorrow for the updated status of your nation.
            </p>
        </div>
    }
    else
    {
        <div class="columns">
            <div class="column col-auto" @onclick="@(() => isVisible = !isVisible)">
                <i class="icon @(isVisible ? "icon-minus" : "icon-plus") c-hand"></i>
            </div>
            <div class="column col-auto">
                <h4 class="m-0">Acceptable Senders</h4>
            </div>
        </div>
        <p class="text-gray my-1">
            Please use this tool to verify VEP enrollment of incoming aid senders that you don't recognize before accepting it.
        </p>
        <p class="text-gray my-1">
            <span class="label label-error">IMPORTANT:</span> <strong>Do not use this list to send aid.</strong> It should only be used to verify
            that nations sending you aid are doing so legitimately.
        </p>
        <div class="form-group">
            <input class="form-input" type="text" placeholder="Filter..." @bind="FilterPhrase" @bind:event="oninput" />
            <label class="form-switch">
                <input type="checkbox"
                       value="@includeAllOfVep"
                       @onchange="@(() =>
                                    {
                                        includeAllOfVep = !includeAllOfVep;
                                        currentPage = 1;
                                    })" />
                <i class="form-icon"></i>
                Include All VEP Members
            </label>
        </div>
        @if (isVisible)
        {
            <div class="divider my-2"></div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Ruler</th>
                        <th>Nation</th>
                        <th>Alliance</th>
                        <th>Role</th>
                        <th>Should Be Sending You Aid</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var recipient in CurrentVisibleRecipients)
                    {
                        <tr>
                            <td>
                                @recipient.RulerName
                            </td>
                            <td>
                                @recipient.NationName
                            </td>
                            <td>
                                @recipient.GetAllianceFullName() <AllianceChip AllianceName="@recipient.Alliance" />
                            </td>
                            <td>
                                <AccountTypeChip AccountType="@recipient.Role" />
                            </td>
                            <td>
                                @if (recipient.ShouldBeSendingAid)
                                {
                                    <span>Yes</span>
                                }
                                else
                                {
                                    <span>No</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="columns">
                <div class="column" style="justify-content: center;">
                    <ul class="pagination">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a href="" @onclick="@(() => currentPage = currentPage - 1)" @onclick:preventDefault>Previous</a>
                        </li>
                        @if (currentPage > 2)
                        {
                            <li class="page-item">
                                <a href="" @onclick="@(() => currentPage = 1)" @onclick:preventDefault>1</a>
                            </li>
                        }
                        @if (currentPage > 3)
                        {
                            <li class="page-item">
                                <span>...</span>
                            </li>
                        }
                        @if (currentPage == TotalPages && TotalPages != 1)
                        {
                            <li class="page-item">
                                <a href="" @onclick="@(() => currentPage = currentPage - 2)" @onclick:preventDefault>@(currentPage - 2)</a>
                            </li>
                        }
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a href="" @onclick="@(() => currentPage = currentPage - 1)" @onclick:preventDefault>@(currentPage - 1)</a>
                            </li>
                        }
                        <li class="page-item disabled">
                            <a href="" @onclick="@(() => { })" @onclick:preventDefault>@currentPage</a>
                        </li>
                        @if (currentPage < TotalPages)
                        {
                            <li class="page-item">
                                <a href="" @onclick="@(() => currentPage = currentPage + 1)" @onclick:preventDefault>@(currentPage + 1)</a>
                            </li>
                        }
                        @if (currentPage == 1 && TotalPages != 1)
                        {
                            <li class="page-item">
                                <a href="" @onclick="@(() => currentPage = currentPage + 2)" @onclick:preventDefault>@(currentPage + 2)</a>
                            </li>
                        }
                        @if (currentPage < TotalPages - 2)
                        {
                            <li class="page-item">
                                <span>...</span>
                            </li>
                        }
                        @if (currentPage < TotalPages - 1)
                        {
                            <li class="page-item">
                                <a href="" @onclick="@(() => currentPage = TotalPages)" @onclick:preventDefault>@TotalPages</a>
                            </li>
                        }
                        <li class="page-item @(currentPage == TotalPages ? "disabled" : "")">
                            <a href="" @onclick="@(() => currentPage = currentPage + 1)" @onclick:preventDefault>Next</a>
                        </li>
                    </ul>
                </div>
            </div>
        }
    }
</div>

@code {

    private bool isVisible = false;
    private bool includeAllOfVep = false;
    private int currentPage = 1;
    private const int pageCount = 10;

    private string _filterPhrase = string.Empty;
    private string FilterPhrase
    {
        get => _filterPhrase;
        set
        {
            _filterPhrase = value;
            isVisible = !string.IsNullOrEmpty(value);
        }
    }

    private IEnumerable<ValidAccount> AllAvailableRecipients => Account.AcceptableRecipients
        .Where(r => includeAllOfVep || r.ShouldBeSendingAid)
        .Where(r =>
            r.RulerName.Contains(FilterPhrase, StringComparison.OrdinalIgnoreCase)
            || r.NationName.Contains(FilterPhrase, StringComparison.OrdinalIgnoreCase)
            || r.Alliance.Contains(FilterPhrase, StringComparison.OrdinalIgnoreCase)
            || r.GetAllianceFullName().Contains(FilterPhrase, StringComparison.OrdinalIgnoreCase)
            || r.Role.ToString().Contains(FilterPhrase, StringComparison.OrdinalIgnoreCase)
        );

    private IEnumerable<ValidAccount> CurrentVisibleRecipients => AllAvailableRecipients.Skip((currentPage - 1) * pageCount).Take(pageCount);

    private int TotalPages => (int)Math.Ceiling(AllAvailableRecipients.Count() / (decimal)pageCount);

    [Parameter]
    public Account Account { get; set; }

}
